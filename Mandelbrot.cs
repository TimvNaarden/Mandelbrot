using System;
using System.Collections.Generic;
using System.Drawing;
using System.Windows.Forms;
using Microsoft.Toolkit.Uwp.Helpers;

namespace Mandelbrot_Namespace {
	class Mandebrot_class : Form {
		private readonly Bitmap MandelGrid = new(400, 400);
		private TextBox StartXInput;
		private TextBox StartYInput;
		private TextBox MaxTriesInput;
		private TextBox ScaleInput;
		private Label MandelDisplay;
		private Label StartXLabel;
		private Label StartYLabel;
		private Label ScaleLabel;
		private Label MaxTriesLabel;
		private CheckBox AutoUpdateCheckBox;
		private ComboBox SelectExampleList;
		private ComboBox SelectColorSchemeList;
		private Button RecalculateButton;
		public Mandebrot_class() {
			Text = "Mandelbrot";
			InitializeComponent();
			// Leave here, otherwise the Visual Studio Designer interferes with it and removes it
			MandelDisplay.Image = MandelGrid;
			// Show the mandelbrot image when program opens
			RenderMandelImage();
		}
		// Don't change this function, is automaticly generated by the VS Designer
		// You can change the values of sizes, point etc
		private void InitializeComponent() {
			StartXInput = new TextBox();
			StartYInput = new TextBox();
			MaxTriesInput = new TextBox();
			ScaleInput = new TextBox();
			MandelDisplay = new Label();
			StartXLabel = new Label();
			StartYLabel = new Label();
			MaxTriesLabel = new Label();
			ScaleLabel = new Label();
			RecalculateButton = new Button();
			AutoUpdateCheckBox = new CheckBox();
			SelectExampleList = new ComboBox();
			SelectColorSchemeList = new ComboBox();
			SuspendLayout();
			// 
			// StartXInput
			// 
			StartXInput.Location = new Point(120, 10);
			StartXInput.Name = "StartXInput";
			StartXInput.Size = new Size(100, 27);
			StartXInput.TabIndex = 3;
			StartXInput.Text = "0";
			StartXInput.TextChanged += InputChanged;
			// 
			// StartYInput
			// 
			StartYInput.Location = new Point(120, 45);
			StartYInput.Name = "StartYInput";
			StartYInput.Size = new Size(100, 27);
			StartYInput.TabIndex = 4;
			StartYInput.Text = "0";
			StartYInput.TextChanged += InputChanged;
			// 
			// MaxTriesInput
			// 
			MaxTriesInput.Location = new Point(120, 77);
			MaxTriesInput.Name = "MaxTriesInput";
			MaxTriesInput.Size = new Size(100, 27);
			MaxTriesInput.TabIndex = 5;
			MaxTriesInput.Text = "100";
			MaxTriesInput.TextChanged += InputChanged;
			// 
			// ScaleInput
			// 
			ScaleInput.Location = new Point(299, 7);
			ScaleInput.Name = "ScaleInput";
			ScaleInput.Size = new Size(100, 27);
			ScaleInput.TabIndex = 4;
			ScaleInput.Text = "0.01";
			ScaleInput.TextChanged += InputChanged;
			// 
			// MandelDisplay
			// 
			MandelDisplay.Location = new Point(8, 141);
			MandelDisplay.Name = "MandelDisplay";
			MandelDisplay.Size = new Size(400, 400);
			MandelDisplay.TabIndex = 6;
			MandelDisplay.MouseClick += MandelDisplayMouseClick;
			// 
			// StartXLabel
			// 
			StartXLabel.Location = new Point(10, 10);
			StartXLabel.Name = "StartXLabel";
			StartXLabel.Size = new Size(75, 27);
			StartXLabel.TabIndex = 2;
			StartXLabel.Text = "X Start: ";
			// 
			// StartYLabel
			// 
			StartYLabel.Location = new Point(10, 45);
			StartYLabel.Name = "StartYLabel";
			StartYLabel.Size = new Size(75, 27);
			StartYLabel.TabIndex = 1;
			StartYLabel.Text = "Y Start:";
			// 
			// MaxTriesLabel
			// 
			MaxTriesLabel.Location = new Point(10, 77);
			MaxTriesLabel.Name = "MaxTriesLabel";
			MaxTriesLabel.Size = new Size(75, 27);
			MaxTriesLabel.TabIndex = 0;
			MaxTriesLabel.Text = "Max Tries:";
			// 
			// ScaleLabel
			// 
			ScaleLabel.AutoSize = true;
			ScaleLabel.Location = new Point(237, 9);
			ScaleLabel.Name = "ScaleLabel";
			ScaleLabel.Size = new Size(51, 20);
			ScaleLabel.TabIndex = 8;
			ScaleLabel.Text = "Scale: ";
			// 
			// RecalculateButton
			// 
			RecalculateButton.Location = new Point(237, 72);
			RecalculateButton.Name = "RecalculateButton";
			RecalculateButton.Size = new Size(116, 32);
			RecalculateButton.TabIndex = 7;
			RecalculateButton.Text = "Go";
			RecalculateButton.UseVisualStyleBackColor = true;
			RecalculateButton.Click += RecalculateButtonClick;
			// 
			// AutoUpdateCheckBox
			// 
			AutoUpdateCheckBox.AutoSize = true;
			AutoUpdateCheckBox.Checked = true;
			AutoUpdateCheckBox.CheckState = CheckState.Checked;
			AutoUpdateCheckBox.Location = new Point(237, 44);
			AutoUpdateCheckBox.Name = "AutoUpdateCheckBox";
			AutoUpdateCheckBox.Size = new Size(116, 24);
			AutoUpdateCheckBox.TabIndex = 9;
			AutoUpdateCheckBox.Text = "Auto Refresh";
			AutoUpdateCheckBox.UseVisualStyleBackColor = true;
			// 
			// SelectExampleList
			// 
			SelectExampleList.FormattingEnabled = true;
			SelectExampleList.Items.AddRange(new object[] { "Default", "Heat", "Cyclone", "Snowflake", "Star" });
			SelectExampleList.Location = new Point(10, 106);
			SelectExampleList.Name = "SelectExampleList";
			SelectExampleList.Size = new Size(145, 28);
			SelectExampleList.TabIndex = 11;
			SelectExampleList.Text = "Select Example";
			SelectExampleList.SelectedIndexChanged += SelectExampleListChanged;
			// 
			// SelectColorSchemeList
			// 
			SelectColorSchemeList.FormattingEnabled = true;
			SelectColorSchemeList.Items.AddRange(new object[] { "Black and White", "Red Green Blue", "Yellow Orange Red", "Hue Range" });
			SelectColorSchemeList.Location = new Point(237, 106);
			SelectColorSchemeList.Name = "SelectColorSchemeList";
			SelectColorSchemeList.Size = new Size(171, 28);
			SelectColorSchemeList.TabIndex = 12;
			SelectColorSchemeList.Text = "Select Color Scheme";
			SelectColorSchemeList.SelectedIndexChanged += SelectColorSchemeListChanged;
			// 
			// Mandebrot_class
			// 
			ClientSize = new Size(420, 550);
			Controls.Add(SelectColorSchemeList);
			Controls.Add(SelectExampleList);
			Controls.Add(AutoUpdateCheckBox);
			Controls.Add(ScaleLabel);
			Controls.Add(RecalculateButton);
			Controls.Add(MaxTriesLabel);
			Controls.Add(StartYLabel);
			Controls.Add(StartXLabel);
			Controls.Add(StartXInput);
			Controls.Add(StartYInput);
			Controls.Add(ScaleInput);
			Controls.Add(MaxTriesInput);
			Controls.Add(MandelDisplay);
			Name = "Mandebrot_class";
			ResumeLayout(false);
			PerformLayout();
		}

		// The mandel image is being rendered here 
		private void RenderMandelImage() {
			// Get the scale input, otherwise return 
			if (!(float.TryParse(ScaleInput.Text.Replace('.', ','), out float Scale))) return;
			// Clear the image
			for (int i = 0; i < 400; i++) {
				for (int j = 0; j < 400; j++) {
					MandelGrid.SetPixel(i, j, Color.White);
				}
			}
			// Get the other input variables
			if (!(float.TryParse(StartXInput.Text.Replace('.', ','), out float StartX))) StartX = 0;
			if (!(float.TryParse(StartYInput.Text.Replace('.', ','), out float StartY))) StartY = 0;
			if (!(int.TryParse(MaxTriesInput.Text.Replace('.', ','), out int MaxTries))) MaxTries = 100;
			// Loop thru the 400x400 grid and adjust the cords with the input variables
			for (int i = 0; i < 400; i++) {
				for (int j = 0; j < 400; j++) {
					float MandelNumberX = (i - 200) * Scale + StartX;
					float MandelNumberY = (j - 200) * Scale + StartY;
					Color Color;
					switch (SelectColorSchemeList.SelectedItem) {
						case "Black and White":
							Color = (CalcMandelNumber(MandelNumberX, MandelNumberY, MaxTries) % 2 == 0) ? Color.Black : Color.White;
							break;
						case "Red Green Blue":
							double hue2 = (CalcMandelNumber(MandelNumberX, MandelNumberY, MaxTries) % 128) / 128d;
							Windows.UI.Color c2 = ColorHelper.FromHsv(hue2 * 360, 1.0, 1.0, 1.0);
							Color = Color.FromArgb(c2.A, c2.R, c2.G, c2.B);
							break;
						case "Yellow Orange Red":
							double hue1 = (CalcMandelNumber(MandelNumberX, MandelNumberY, MaxTries) % 60) / 256d;
							Windows.UI.Color c1 = ColorHelper.FromHsv(hue1 * 360, 1.0, 1.0, 1.0);
							Color = Color.FromArgb(c1.A, c1.R, c1.G, c1.B);
							break;
						case "Hue Range":
							double hue = (CalcMandelNumber(MandelNumberX, MandelNumberY, MaxTries) % 256) / 256d; 
							Windows.UI.Color  c = ColorHelper.FromHsv(hue * 360, 1.0, 1.0, 1.0);
							Color = Color.FromArgb(c.A, c.R, c.G, c.B);
							break;
						default:
							Color = (CalcMandelNumber(MandelNumberX, MandelNumberY, MaxTries) % 2 == 0) ? Color.Black : Color.White;
							break;
					}
					
					MandelGrid.SetPixel(i, j, Color);
				}
			}
			MandelDisplay.Invalidate();
		}
		// Returns the mandelnumber, don't change 
		private static int CalcMandelNumber(float x, float y, int MaxTries) {
			int Tries = 0;
			float a = 0, b = 0;
			for(; Tries < MaxTries && Math.Sqrt(a * a + b * b) <= 2; ++Tries) {
				float olda = a;
				a = a * a - b * b + x;
				b = 2 * olda * b + y;
			}
			return Tries;
		}
		private void RecalculateButtonClick(object sender, EventArgs e) {
			RenderMandelImage();
		}
		// Input fields change
		private void InputChanged(object sender, EventArgs e) {
			if (AutoUpdateCheckBox.Checked) RenderMandelImage();
		}

		// Mouseclicks, so zoom in and zoom out
		private void MandelDisplayMouseClick(object sender, MouseEventArgs e) {
			double ZoomFactor = (e.Button == MouseButtons.Left) ? 0.66 : 1.5;
			if (!(float.TryParse(StartXInput.Text.Replace('.', ','), out float StartX))) StartX = 0;
			if (!(float.TryParse(StartYInput.Text.Replace('.', ','), out float StartY))) StartY = 0;
			if (!(float.TryParse(ScaleInput.Text.Replace('.', ','), out float Scale))) return;
			StartXInput.Text = ((e.X - 200) * Scale + StartX).ToString();
			StartYInput.Text = ((e.Y - 200) * Scale + StartY).ToString();
			ScaleInput.Text = (Scale * ZoomFactor).ToString();
		}

		private void SelectExampleListChanged(object sender, EventArgs e) {
			switch (SelectExampleList.SelectedItem) {
				case "Default":
					StartXInput.Text = "0";
					StartYInput.Text = "0";
					ScaleInput.Text = "0.01";
					MaxTriesInput.Text = "100";
					SelectColorSchemeList.SelectedIndex = 0;
					break;
				case "Heat":
					StartXInput.Text = "-0.014";
					StartYInput.Text = "0.74";
					ScaleInput.Text = "3.1E-5";
					MaxTriesInput.Text = "400";
					SelectColorSchemeList.SelectedIndex = 3;
					break;
				case "Cyclone":
					StartXInput.Text = "-0.0127";
					StartYInput.Text = "0.737";
					ScaleInput.Text = "4.5E-5";
					MaxTriesInput.Text = "100";
					SelectColorSchemeList.SelectedIndex = 0;
					break;
				case "Snowflake":
					StartXInput.Text = "0.3598";
					StartYInput.Text = "-0.58693";
					ScaleInput.Text = "5E-6";
					MaxTriesInput.Text = "100";
					SelectColorSchemeList.SelectedIndex = 3;
					break;
				case "Star":
					StartXInput.Text = "-0.0419096";
					StartYInput.Text = "-0.98823553";
					ScaleInput.Text = "3.0803384674982227E-07";
					MaxTriesInput.Text = "600";
					SelectColorSchemeList.SelectedIndex = 1;
					break;

			}
			if (AutoUpdateCheckBox.Checked) RenderMandelImage();
		}

		private void SelectColorSchemeListChanged(object sender, EventArgs e) {
			if (AutoUpdateCheckBox.Checked) RenderMandelImage();
		}
	}
}